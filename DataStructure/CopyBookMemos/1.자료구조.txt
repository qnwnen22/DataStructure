1.1 자료구조(Data Structure)

자료구조란 데이터를 효율적으로 엑세스하고 조작할 수 있도록 데이터의구조를 만들어 데이타를 저장하고 관리하는 것을 일컫는다.
자료구조에는 여러 가지 종류의 구조가 있으며, 각 자료구조마다 장단점이 있기 때문에 자신의 목적에 맞는 자료구조를 잘 선택하는 작업이 필요하다.
효과적으로 잘 설계된 자료구조는 실행시간을 최소화하고, 소요 공간을 최소한으로 사용하면서 연산을 수행할 수 있도록 해준다.


1.2 추상적 자료형과 자료구조

특별한 구현방법을 기정하지 않은 자료형을 추상적 자료형(Abstract Data Type, ADT)이라 부르는데, 
추상적 자료형은 일반적으로 알고리즘이 문제를 해결하는데 필요한 자료의 형태와 그 자료를 사용한 연산들을 수학적으로 정의한 모델이다.

추상적 자료형은 흔히 자료구조와 동일한 것으로 사용되기도 하고, 실제 사용하는 용어도 서로 호환적으로 사용되곤 한다.
하지만, 기술적으로 두 개념은 약간의 차이점이 있다.

추상적 자료형은 "무엇(What)"이 구현되어져야 하는지를 정의한 것으로 자료형의 논리적 형태를 정의하는 것이고,
자료구조는 이것을 "어떻게(How)" 구현할 지를 파악해서 물리적인 형태로 구현하는 것이다.

예를 들어, 스택(Stack)은 추상적 자료형으로서 마지막에 입력된 데이터가 먼저 꺼내지는 방식을 정의한 것으로,
스택은 자료구조 구현 측면에서 배열형태로 구현될 수도 있고 연결 리스트(Linked List) 형태로 구현될 수도 있다.

일반적으로 잘 알려진 추상적 자료형을 예를 들면, Stack, Queue, 우선순위 큐(Priority Queue), 데크(Double-ended Queue), Tree, 
Graph, Map, Associative Array, Set, List, Container 등을 들 수 있다.


1.3 자료구조의 종류

자료구조의 종류를 자료 형태에 따라 분류하면 다음과 같이 분류할 수 있다.

 - 단순 구조(Primitive Data Structure)		: 프로그래밍에서 사용되는 기본적인 데이터 타입으로 정수,실수,문자,부울린 등의 기초 타입들이 여기에 속한다.
 - 선형 구조(Linear Data Structure)		: 자료 요소가 선형적으로 연결되어 있는 구조로서 앞 자료와 뒤 자료가 1대 1인 구조를 갖는다. 배열, 연결 리스트,스택,큐 같은 자료구조가 이에 해당한다.
 - 비선형 구조(Non-linear Data Structure)	: 자료 간 관계가 1대 다 혹은 다대 다 구조로서 계층구조 혹은 네트워크 망 구조를 갖는다. 트리와 그래프가 이에 해당한다.
 - 파일 구조								: 레코드의 집합은 파일에 대한 자료구조로서 순차파일,색인파일,직접파일 등이 이에 해당한다
 
이 책에서는 선형 구조와 비선형 구조에 해당하는 자료구조에 대해 자세히 소개하고자 한다.
즉, 선형 구조에 속하는 배열,연결리스트,큐,스택에 대해 먼저 살펴보고 이어 비선형 구조에 속하는 트리, 이진트리,이진탐색트리,힙,트라이,그래프에 대해 자세히 알아볼 것이다.
또한, 구현방법에 따라 선형구조나 비선형 구조가 될 수 있는 해시테이블에 대해서도 책 후반에 자세히 소개할 것이다.