7.2 연결리스트를 이용한 이진 트리의 구현

이진 트리를 구현하는 방식은 일반적으로 (1)연결리스트를 이용하는 방법과 (2)배열을 이용하는 방법이 있다.

이진 트리의 노드는 데이타와 좌/우 노드를 갖는 간단한 구조이므로 이 노드를 클래스로 정의하고 이를 연결하여 링크를 구성하면 쉽게 이진 트리를 표현할 수 있다.
아래 예제는 간단한 이진 트리 클래스를 정의하고 노드들을 연결하여 이진 트리를 구성한 예이다.

*BinaryTreeNode.cs, BinaryTree.BinaryTree.cs, BinaryTree.Exmaple.cs Exmaple1() 참조

위의 BinaryTreeNode<T> 및 BinaryTree<T> 클래스는 C#의 제네릭 기능을 사용한 클래스로서, 제네릭 크래스는 new BinaryTree<int>()와 같이 객체를 생성할 때 원하는 타입 T(여기서는 int)를 지정하게 된다.

바이너리트리 클래스는 생성자에서 이진 트리의 루트 노드값을 받아들이고 있고, 객체 생성 이후에는 외부에서 루트 노드를 교체할 수 없다.
Root 속성은 private set 으로 설정되어 있는데, 이는 해당 속성이 클래스 내부에서만 설정될 수 있다는 것을 의미한다.

PreorderTraversal() 메서드는 트리 노드들을 순회하는 한 방법으로 Preorder 즉 부모노드를 먼저 순회하고 다음 왼쪽 서브트리를, 마지막으로 오른쪽 서브트리를 순회하는 방식이다.
이 부분에 대해서는 아래에 좀 더 자세히 설명한다.