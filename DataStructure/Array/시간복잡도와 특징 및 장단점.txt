동적 배열의 주요 연산과 시간 복잡도:

원소 접근 (Access): 인덱스를 사용하여 특정 위치의 원소에 접근
시간 복잡도: 𝑂(1)

원소 삽입 (Append):
동적 배열의 끝에 원소를 추가
시간 복잡도: 평균 𝑂(1), 최악의 경우 𝑂(𝑛) (배열 크기가 변경될 때)

원소 삭제 (Remove):
특정 위치의 원소를 삭제하고, 뒤의 원소들을 앞으로 이동
시간 복잡도: 평균 𝑂(𝑛), 최악의 경우 𝑂(𝑛)

원소 삽입 (Insert):
특정 위치에 원소를 삽입하고, 뒤의 원소들을 뒤로 이동
시간 복잡도: 평균 𝑂(𝑛), 최악의 경우 𝑂(𝑛)

동적 배열 확장 (Resize):
현재 배열 크기보다 큰 새로운 배열을 생성하고, 모든 원소를 새 배열로 복사
시간 복잡도: 𝑂(𝑛)

동적 배열은 원소 접근이 𝑂(1)로 매우 효율적이지만, 원소 삽입, 삭제, 배열 크기 변경과 같은 연산에서는 최악의 경우 𝑂(𝑛)의 시간 복잡도를 가질 수 있습니다. 
따라서, 대량의 데이터를 빈번하게 삽입 또는 삭제해야 하는 경우에는 다른 자료구조(예: 연결 리스트)를 고려해야 할 수 있습니다.