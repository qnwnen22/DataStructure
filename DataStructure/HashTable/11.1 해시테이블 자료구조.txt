11.1 해시테이블 자료구조

해시테이블은 해쉬 맵(Hash Map)이라고도 불리우는데, 키(Key)와 값(Value)을 매핑하는 기능(연관 배열)을 구현한 자료구조이다.
연관 배열(Associative Array)은 Key와 Value)가 서로 연관되어 있는 것을 표현한 추상적 자료형이다.
예를 들어, 아래는 성명을 Key로 하고 그 사람의 전화번호를 Value로 한 해시테이블을 표현한 것이다.

	 [해시테이블]
	Key		Value
	김인수	3643-1932
	박민규	2643-2231
	강민주	2612-3245
	
해시테이블에서 Key와 Value가 갖는 장소를 버켓(Bucket) 혹은 슬롯(Slot)이라 하는데, 이 버켓을 배열로 구현하여 Key와 Value를 매핑하는 테이블을 만들게 된다.

해시테이블에서 Key는 해시 함수(Hash function)를 통해 해시테이블 내의 특정 Bucket 주소로 변환되는데, 이 과정을 해싱(Hashing)이라 한다.
이러한 해싱 과정을 통해 임의의 Key에 상응하는 해시테이블 내의 Bucket 위치를 직접 엑세스할 수 있게 된다.

아래 그림은 간단한 해시테이블의 기초 개념을 표현한 것으로, Key가 해시 함수를 거쳐 Bucket 주소로 변환되고, 해당 Bucket에 Value 값이 들어가 있는 매핑 개념을 표현한 것이다.

*이미지 참조

이상적인 상황에서는 위 그림과 같이 모든 Key가 해시 함수를 거쳐 유일무이한(Unique) Bucket 인덱스에 1 대 1로 매핑될 것이지만, 실제로는 복수 개의 Key들에 대해 해시함수가 동일한 Bucket 인덱스를 리턴할 가능성이 있다.
해시함수가 모든 상황에 완전한 것이 아니기 때문에 복수 Key에 대해 동일한 인덱스를 리턴할 수도 있고, Key의 범위가 상당히 클 경우 완전한 해시 함수라 할지라도 여러 Key들이 동일한 Bucket을 가리킬 가능성도 있다.
이렇게 복수 개의 Key가 동일한 Bucket 주소를 가리키는 것을 해시충돌(Hash Collision)이라 부른다.
이러한 해시충돌 문제를 해결하기 위해 여러 가지 기법들이 사용되는데, 해시테이블을 구현할 때 이러한 해시충돌 부분을 함께 고려하여 구현해야 한다.
위 그림은 해시충돌이 없는 이상적인 상황에서 Key가 해싱을 통해 Value로 1 대 1로 매핑한 것을 표현한 것이지만, 대부분의 경우 해시충돌을 고려하며 Bucket에 Key와 Value를 함께 저장하는 것이 일반적이다.

해시테이블은 삽입, 삭제, 검색 수행에 있어서 평균적으로 O(1)의 시간 복잡성을 가지며, 일반적으로 다른 자료구조에 비해 빠른 성능을 가진다고 알려져 있다.