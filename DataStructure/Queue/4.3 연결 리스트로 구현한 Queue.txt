4.3 연결 리스트로 구현한 Queue

연결 리스트를 이용하여 Queue를 구현하는 로직은 비교적 간단하다.
Queue에 새 데이타를 추가(Enqueue)하기 위해서는 연결 리스트의 마지막에 새 노드를 추가하면 되고, 데이타를 꺼내오기 위해서는 연결 리스트의 첫 노드를 읽어 오면 된다.
단일 연결 리스트를 구현하면서 Head와 Tail을 갖게 하고, Tail을 통해 Enqueue하고, Head를 통해 Dequeue하면 Queue 기능을 간단히 구현할 수 있다.
연결 리스트로 구현한 Queue의 시간 성능은 Head/Tail 을 사용하는 경우 Enqueue와 Dequeue에서 모두 O(1)을 갖게 된다.

단일 연결 리스트를 이용한 Queue

	Dequeue()		Enqueue()
	 Head			 Tail
	  ↙			 ↙
	[ 1 ]→[ 2 ]→[ 3 ]


아래 예제는 Head와 Tail을 갖는 단일 연결 리스트를 사용하여 Queue를 구현한 샘플코드이다.

*Queue.QueueUsingLinkedList.cs 참조

연결 리스트는 동적으로 필요한 노드를 무제한 할당할 수 있으므로, 배열과 같이 큐 크기가 제한되지 않는다.
큐에 넣어야할 데이타가 무제한이거나 가변적일 때, 연결 리스트를 이용한 큐를 사용하는 것이 효율적이다.