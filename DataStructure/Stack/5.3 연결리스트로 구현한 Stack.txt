5.3 연결리스트로 구현한 Stack

연결 리스트는 그 구조가 일렬로 데이타를 연결하고 있다는 점에서 스택을 구현하는데 쉽게 이용될 수 있다.
다만, 연결 리스트로 스택을 구현하기 위해서는 마지막 노드 뒤에 새 노드를 추가하는 것이 아니라, 아래 그림처럼 스택의 top 포인터에 새 노드를 추가하면서 새 노드를 Next 포인터가 이전 노드를 가리키도록 해야한다.

*이미지 참조

Stack에서 데이타를 꺼내오는 동작은 top 포인터의 데이타를 리턴하면서 top 포인터를 top의 아래 노드에 설정하면 된다.

아래 예제는 단일 연결 리스트를 사용하여 스택을 구현한 샘플코드이다.

*Stack.StackUsingLinkedList.cs 참조

위 예제에서 Node 클래스는 Stack 클래스 안에 private class로 정의되어 있다.
Node 클래스를 private으로 지정함으로써 Node 클래스는 Stack 클래스 내부에서만 사용할 수 있게 된다.

연결 리스트로 구현한 스택의 시간 성능은 푸쉬와 팝에서 모두 O(1)을 갖게 된다.
또한 이 방식은 메모리가 허용하는 한 무제한의 공간을 사용할 수 있기 때문에 배열 처럼 스택이 가득 차거나 배열을 다시 확장해야 하는 문제를 갖지 않는다.